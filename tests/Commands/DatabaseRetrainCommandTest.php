<?php

namespace LaravelMl\Tests\Commands;

use Illuminate\Http\Client\Request;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Str;
use LaravelMl\Api\Api;
use LaravelMl\Api\ApiFacade;
use LaravelMl\Tests\BaseTest;
use LaravelMl\Tests\Models\TestModelItem;

class DatabaseRetrainCommandTest extends BaseTest
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        config([
            'laravel-ml' => [
                'database' => '::database::',
            ],
        ]);
    }

    /** @test */
    public function makesNetworkCallUsingDefault()
    {
        config([
            'laravel-ml' => [
                'token' => 'abc',
                'database' => '::database1::',
            ],
        ]);

        Http::fake();

        Artisan::call('ml:retrain');

        Http::assertSent(function (Request $request) {
            return Str::contains($request->url(), ['/api/databases/::database1::'])
                && $request->method() === 'PUT'
                && $request['retrain'] === true;
        });
    }

    /** @test */
    public function allDatabaseParamFromUserInputWillOverrideDefaultDatabase()
    {
        config([
            'laravel-ml' => [
                'token' => 'abc',
                'database' => '::database1::',
            ],
        ]);

        Http::fake();

        Artisan::call('ml:retrain', [
            '--database' => '::database2::',
        ]);

        Http::assertSent(function (Request $request) {
            return Str::contains($request->url(), ['/api/databases/::database2::'])
                && $request->method() === 'PUT'
                && $request['retrain'] === true;
        });
    }

}
