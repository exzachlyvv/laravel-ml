<?php

namespace Recon\Tests\Commands;

use Illuminate\Http\Client\Request;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Str;
use Recon\Api\Api;
use Recon\Api\ApiFacade;
use Recon\Tests\BaseTest;
use Recon\Tests\Models\TestModelItem;
use Recon\Tests\Models\TestModelUser;

class ReconSeedCommandTest extends BaseTest
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        config([
            'recon' => [
                'database' => '::database::',
            ],
        ]);
    }

    /** @test */
    public function makesNetworkCallUsingDefault()
    {
        config([
            'recon' => [
                'token' => 'abc',
                'database' => '::database1::',
            ],
        ]);

        Http::fake();

        $user1 = TestModelUser::create([
            'name' => 'John Doe',
            'gender' => 'Male',
            'age' => 22,
            'salary' => 100,
        ]);
        $user2 = TestModelUser::create([
            'name' => 'Jane Doe',
            'gender' => 'Female',
            'age' => 22,
            'salary' => 100,
        ]);

        $item1 = TestModelItem::create([
            'color' => 'red',
            'rating' => 4.45,
            'ratings' => 132,
        ]);
        $item2 = TestModelItem::create([
            'color' => 'blue',
            'rating' => 4.45,
            'ratings' => 132,
        ]);

        ApiFacade::shouldReceive('putUsers')->once()->withArgs(function (Collection $collection) use ($user1, $user2) {
            return $collection->count() === 2 && $collection[0]->is($user1) && $collection[1]->is($user2);
        });
        ApiFacade::shouldReceive('putItems')->once()->withArgs(function (Collection $collection) use ($item1, $item2) {
            return $collection->count() === 2 && $collection[0]->is($item1) && $collection[1]->is($item2);
        });

        Artisan::call('recon:seed --users --items');
    }

    /** @test */
    public function allDatabaseParamFromUserInputWillOverrideDefaultDatabase()
    {
        config([
            'recon' => [
                'token' => 'abc',
                'database' => '::database1::',
            ],
        ]);

        ApiFacade::shouldReceive('seedDatabase')->with('::database2::');

        Artisan::call('recon:seed', [
            '--database' => '::database2::',
        ]);
    }

}
